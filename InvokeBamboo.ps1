#DisableprogressbarscreatedbyInvoke-RestMethodwhichinternallyusesWrite-Progress)$progressPreference='silentlyContinue'$url='http://130.25.14.49:8085/'$apiUrl=$url+'rest/api/latest/'$project='AD-BA'$queueUrl=("{0}queue/{5}"-f$apiUrl,$project)$username='one'$password='password'#Buildbasicauthvalues$base64AuthInfo=[Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(("{0}:{1}"-f$username,$password)))#Queuethebuild$result=Invoke-RestMethod-MethodPost-Headers@{Authorization=("Basic{0}"-f$base64AuthInfo)}$queueUrl$buildUrl=$url+"browse/"+$result.restQueuedBuild.buildResultKeyWrite-Host("Buildnumber{0}queuedsuccessfully,see{1}"-f$result.restQueuedBuild.buildNumber,$buildUrl)#Pollthebuildstatusuntilcompleteortimeout$time=0$refreshInterval=5$timeout=120$prevStatus=""while(1){$status=Invoke-RestMethod$result.restQueuedBuild.link.hrefif($status.result.lifeCycleState-eq'Finished'){break;}if($status.result.lifeCycleState-ne$prevStatus){Write-Host("Buildis{0}"-f$status.result.lifeCycleState)$prevStatus=$status.result.lifeCycleState}if($time-ge$timeout){Write-Host"Timeoutexceeded..."-foregroundcolor"red"break;}Start-Sleep-s$refreshInterval$time+=$refreshInterval}$fgcol='red'if($status.result.state-eq'Successful'){$fgcol='green'}Write-Host("Buildis{0},outcomeis{1}"-f$status.result.lifeCycleState,$status.result.state)-foregroundcolor$fgcolWrite-Host("See{0}fordetails"-f$buildUrl)-foregroundcolor$fgcol#Re-enableprogressbars$progressPreference='Continue'
